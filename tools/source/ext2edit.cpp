#include <cstdio>
#include <cstdlib>
#include <cstring>

struct dIcon{
    short int line;
    short int c;
}dialogIcon[138][51]={{{271,2},{281,1},{285,1},{288,1},{598,1},{604,1},{781,2},{1150,2},{1232,2},{1505,10},{1709,1},{1736,2},{3460,2},{3463,3},{3473,2},{3503,2},{3522,2},{3583,1},{3687,2},{3729,1},{3761,66},{0,0}},{{76,1},{83,17},{102,3},{120,6},{139,6},{153,12},{186,9},{219,1},{238,2},{264,2},{271,3},{289,1},{381,1},{414,1},{416,2},{419,1},{421,3},{2148,1},{0,0}},{{14,6},{64,7},{78,8},{133,9},{154,1},{611,1},{168,1},{196,12},{218,1},{226,9},{253,5},{262,1},{276,1},{301,3},{611,1},{304,1},{325,1},{335,1},{342,4},{362,3},{434,2},{437,1},{439,2},{0,0}},{{1,2},{8,1},{30,1},{32,7},{125,1},{192,6},{256,1},{285,1},{305,7},{317,5},{334,1},{0,0}},{{1,1},{11,24},{55,13},{119,1},{177,1},{195,15},{222,8},{235,3},{254,6},{272,2},{341,6},{389,4},{409,8},{444,4},{0,0}},{{10,1},{34,1},{39,11},{93,1},{149,1},{178,3},{190,5},{205,9},{223,1},{232,1},{234,1},{244,1},{247,3},{252,1},{286,10},{307,4},{389,5},{397,1},{412,4},{432,1},{0,0}},{{29,6},{105,5},{165,1},{202,6},{227,4},{241,20},{279,15},{303,14},{322,4},{0,0}},{{9,3},{24,2},{83,1},{203,2},{211,1},{264,3},{307,7},{336,3},{345,4},{355,2},{370,5},{387,5},{399,2},{425,2},{436,2},{450,8},{470,4},{481,2},{521,3},{0,0}},{{1,1},{9,5},{117,2},{121,1},{133,2},{154,8},{165,3},{174,4},{196,5},{381,8},{412,5},{493,1},{498,9},{526,2},{0,0}},{{1,1},{16,5},{26,4},{48,1},{89,4},{122,6},{250,2},{353,7},{387,4},{424,12},{451,2},{520,28},{563,9},{0,0}},{{7,1},{58,1},{61,3},{72,3},{80,1},{83,3},{108,3},{116,1},{181,2},{201,3},{231,1},{265,2},{272,12},{312,7},{322,2},{333,4},{344,6},{355,4},{364,1},{438,14},{456,2},{473,6},{485,3},{491,1},{0,0}},{{69,2},{97,3},{134,2},{139,3},{173,3},{181,2},{215,1},{333,2},{512,13},{534,14},{553,4},{595,12},{629,8},{657,1},{671,1},{0,0}},{{54,5},{131,2},{176,3},{189,4},{270,1},{283,2},{301,3},{332,2},{335,2},{351,2},{377,1},{415,8},{450,4},{521,14},{540,36},{598,1},{628,4},{642,3},{661,1},{0,0}},{{137,1},{178,4},{198,4},{219,1},{271,2},{279,1},{292,3},{303,4},{331,1},{359,1},{365,11},{383,9},{404,1},{416,4},{447,3},{465,6},{492,1},{525,67},{643,3},{650,3},{681,5},{691,6},{759,11},{0,0}},{{1,3},{15,10},{104,1},{214,1},{222,1},{235,11},{251,1},{304,5},{319,8},{332,2},{335,4},{423,6},{439,3},{450,6},{462,3},{485,1},{502,5},{521,1},{524,1},{597,2},{610,3},{0,0}},{{1,1},{7,1},{10,2},{92,1},{295,1},{385,2},{419,1},{424,9},{452,2},{491,10},{503,4},{514,3},{518,7},{527,9},{547,2},{552,13},{572,25},{612,9},{632,16},{671,1},{690,3},{704,18},{735,8},{757,4},{772,2},{0,0}},{{11,1},{40,20},{80,3},{117,4},{136,4},{151,8},{242,1},{367,2},{0,0}},{{1,1},{21,1},{28,1},{98,5},{108,2},{112,2},{139,1},{147,1},{162,1},{187,3},{227,3},{259,1},{275,1},{297,1},{379,1},{385,1},{387,1},{390,3},{416,1},{429,2},{461,2},{472,1},{488,6},{500,3},{506,1},{516,16},{548,13},{567,11},{0,0}},{{22,2},{88,4},{99,3},{188,1},{231,3},{243,2},{270,1},{292,6},{300,2},{303,3},{319,6},{330,1},{359,2},{377,1},{415,39},{461,1},{465,1},{476,5},{487,5},{502,2},{523,3},{0,0}},{{38,4},{52,1},{61,1},{139,1},{143,1},{151,3},{188,22},{238,2},{315,2},{326,4},{352,16},{372,3},{0,0}},{{1,1},{16,2},{50,8},{137,1},{211,1},{251,10},{291,11},{308,2},{346,1},{353,7},{369,1},{430,1},{475,2},{500,1},{513,2},{545,2},{556,1},{561,64},{0,0}},{{5,4},{14,1},{88,1},{116,1},{125,4},{142,2},{191,4},{200,3},{207,9},{229,2},{240,3},{274,2},{305,2},{329,16},{349,3},{381,28},{411,16},{438,4},{490,4},{0,0}},{{127,8},{337,1},{350,3},{376,1},{392,1},{411,1},{428,1},{446,1},{451,5},{467,1},{486,1},{506,1},{525,1},{546,4},{578,7},{0,0}},{{58,4},{126,3},{136,2},{153,2},{216,7},{236,2},{245,3},{261,1},{298,6},{318,1},{333,1},{357,1},{371,1},{426,2},{448,1},{463,1},{479,2},{491,5},{502,5},{517,2},{538,3},{562,9},{574,19},{596,10},{0,0}},{{88,5},{98,5},{108,9},{148,14},{174,2},{210,1},{239,4},{401,1},{421,2},{0,0}},{{1,8},{27,11},{166,1},{205,4},{262,4},{282,9},{296,8},{307,2},{323,1},{329,1},{355,10},{496,2},{518,3},{0,0}},{{1,2},{37,3},{47,2},{58,2},{94,14},{135,3},{182,2},{193,2},{228,14},{269,3},{316,2},{328,2},{363,14},{404,3},{452,2},{463,2},{499,14},{540,3},{586,2},{597,2},{632,14},{673,3},{719,2},{730,2},{765,14},{806,3},{852,2},{863,2},{899,14},{940,3},{988,2},{999,2},{1034,14},{1075,3},{1121,2},{1132,2},{1168,14},{1209,3},{1257,2},{1268,2},{1304,14},{1345,3},{1393,2},{1404,2},{1440,14},{1481,3},{1528,2},{1540,2},{1575,14},{1616,3},{0,0}},{{1,5},{0,0}},{{0,0}},{{0,0}},{{1,13},{47,13},{29,4},{46,1},{0,0}},{{1,5},{38,2},{74,1},{0,0}},{{0,0}},{{0,0}},{{1,13},{24,1},{45,1},{0,0}},{{0,0}},{{20,1},{0,0}},{{45,1},{0,0}},{{1,13},{40,1},{0,0}},{{1,2},{0,0}},{{1,2},{77,4},{96,1},{0,0}},{{0,0}},{{1,14},{51,1},{0,0}},{{27,12},{0,0}},{{0,0}},{{0,0}},{{1,15},{59,1},{0,0}},{{0,0}},{{5,1},{0,0}},{{0,0}},{{1,18},{47,1},{0,0}},{{45,2},{75,4},{0,0}},{{60,1},{86,2},{104,1},{0,0}},{{0,0}},{{1,20},{50,1},{0,0}},{{0,0}},{{23,2},{56,4},{0,0}},{{0,0}},{{1,18},{46,1},{0,0}},{{0,0}},{{0,0}},{{0,0}},{{1,20},{45,1},{0,0}},{{0,0}},{{0,0}},{{1,19},{45,1},{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{63,2},{0,0}},{{1,3},{16,1},{27,9},{48,2},{0,0}},{{38,11},{105,1},{0,0}},{{18,2},{88,2},{0,0}},{{28,7},{53,5},{64,2},{71,1},{102,2},{0,0}},{{25,4},{33,4},{39,3},{0,0}},{{3,1},{28,6},{92,5},{123,5},{140,2},{161,1},{0,0}},{{23,3},{50,6},{62,9},{98,2},{124,3},{135,4},{0,0}},{{38,2},{200,7},{208,1},{0,0}},{{24,2},{81,3},{94,3},{0,0}},{{0,0}},{{63,14},{0,0}},{{12,1},{33,1},{0,0}},{{1,1},{18,1},{33,3},{85,2},{0,0}},{{1,1},{13,6},{31,5},{41,5},{57,3},{127,1},{129,1},{131,3},{136,1},{142,1},{144,1},{149,1},{151,1},{155,1},{159,1},{0,0}},{{25,10},{42,1},{50,1},{0,0}},{{1,1},{19,1},{31,7},{50,6},{0,0}},{{1,1},{7,1},{12,1},{29,1},{36,12},{61,6},{0,0}},{{14,15},{34,2},{0,0}},{{1,1},{19,1},{34,7},{53,1},{0,0}},{{2,2},{34,5},{55,5},{63,6},{120,1},{0,0}},{{0,0}},{{1,1},{5,5},{42,2},{111,1},{0,0}},{{1,1},{17,2},{39,2},{161,1},{164,1},{168,1},{170,1},{172,1},{0,0}},{{32,2},{0,0}},{{1,1},{18,1},{88,1},{102,2},{0,0}},{{1,1},{16,1},{36,6},{72,2},{91,1},{100,1},{128,1},{0,0}},{{1,1},{39,1},{79,2},{0,0}},{{19,4},{37,12},{62,5},{0,0}},{{21,8},{49,1},{60,3},{73,3},{0,0}},{{61,1},{0,0}},{{1,5},{0,0}},{{0,0}},{{0,0}},{{37,1},{0,0}},{{0,0}},{{88,6},{0,0}},{{47,1},{0,0}},{{38,2},{48,2},{0,0}},{{42,10},{0,0}},{{34,3},{43,1},{59,5},{66,1},{0,0}},{{73,1},{76,1},{78,2},{81,4},{86,1},{88,2},{91,1},{0,0}},{{0,0}},{{0,0}},{{2,5},{82,1},{180,4},{199,4},{221,1},{0,0}},{{78,2},{91,3},{0,0}},{{73,1},{91,3},{0,0}},{{73,2},{88,1},{0,0}},{{38,2},{41,1},{64,2},{79,1},{0,0}},{{89,1},{92,2},{104,2},{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{0,0}},{{14,1},{26,6},{62,1},{70,14},{117,4},{141,4},{150,5},{161,3},{0,0}},{{48,1},{75,5},{101,1},{0,0}},{{1,2},{24,4},{31,1},{35,1},{43,5},{80,5},{112,2},{0,0}},{{23,1},{30,1},{55,2},{87,2},{94,2},{0,0}},{{33,23},{69,7},{81,2},{95,3},{140,6},{0,0}}};

bool shortLine[4000]={};            //shortlines for dialogbox with small portrait icon
int pw,pr;                          //read and write pointers
unsigned char *buffer,dest[500000]; //source and destiny file data

void setShortLines(int d){
    //set short lines for a dialogbox with a small portrait
    for(int i=0; dialogIcon[d][i].line!=0; i++)
        for(int j = 0; j<dialogIcon[d][i].c; j++) {
            shortLine[ dialogIcon[d][i].line + j ] = true;
        }
    return;
}

void drawLine(int length){
    for(int i = 0; i< length; i++)
        dest[++pw] = '-';
    return;
}

int main(int argc, char *argv[]){

    size_t result;

    FILE *p = NULL;
    FILE *pout = NULL;

    if(argc == 3){
        p    = fopen(argv[1],"rb");
        pout = fopen( argv[2], "wb");
    } else {
        p    = fopen("outOrg.txt","rb");
        pout = fopen("forEdit.txt","wb");
    };
    if(p == NULL || pout == NULL){return -1;};
//----file read
        // obtain file size:
        fseek (p , 0 , SEEK_END);
        long lSize = ftell (p);
        rewind (p);

        // allocate memory that store the whole file:
        buffer = (unsigned char*) malloc (sizeof(char)*(lSize));
        if (buffer == NULL) {fputs ("Memory error",stderr); exit (2);}

        // copy the file into the buffer:
        result = fread (buffer,1,lSize,p);
        if (result != lSize) {fputs ("Reading error",stderr); exit (3);}
        fclose(p);
//----end reading
        //retrive filenumber
        bool valid = false;
        bool selectionFile = false;
        if(argc==3){

            int i=0;
            int fileNo = 0;
            int length = strlen(argv[2]);
            //find begining of the filename
            for(i = length-3; i>=2; i--)
                if(argv[2][i]=='s' && argv[2][i+1]=='t' && argv[2][i+2]=='r')
                    break;
            //obtain the file number
            for( int j=i+3; j<length ; j++){
                if(argv[2][j]>='0' && argv[2][j]<='9'){
                    fileNo *= 10;
                    fileNo += (argv[2][j] - '0');
                    valid = true;
                } else {
                    break;
                }
            }
            if(fileNo>137)
                valid = false;
            if(valid){
                setShortLines( fileNo );
            } else if (strncmp(argv[2]+i,"strsel",6) == 0) {
                selectionFile = true;
            }

        }
        //replace all $n, $p to newline, add "-----" lines to draw a box margin
        bool secondZero = false;
        int pCounter = 1;
        for(pr = 16, pw = 0 ; pr < lSize; pr++, pw++){
            if(buffer[pr] == '$')
                if(buffer[pr+1] == 'n' || buffer[pr+1] == 'p'){
                    dest[pw] = '\n';
                    pr++;
                    continue;
                }
            dest[pw] = buffer[pr];
            if (dest[pw]==0x0A){
                if(secondZero){
                    dest[++pw] = '~';//  "~-" as the end of structure
                    //draw rest of the line
                    if(valid && shortLine[pCounter])
                        drawLine(31);
                    else if(selectionFile)
                        drawLine(35);
                    else
                        drawLine(39);

                    dest[++pw] = 0x0A;
                    pCounter++;
                    secondZero = false;
                }else {
                    drawLine(4);
                    // print number of the structure/pointer - for easier identy and as a reference to work with debug mode
                    for(int i = 0, r = 1000; i< 4; i++, r/=10)
                        dest[++pw] = '0' + ( pCounter/r ) %10;
                    drawLine(4);

                    dest[++pw] = 0x0A;
                    secondZero = true;
                }
            }
        }
        fwrite (buffer , sizeof(char), 16, pout);
        fwrite (dest , sizeof(char), pw, pout);

        fclose(pout);
        free(buffer);

    return 0;
}
